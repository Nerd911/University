
prog2:     file format elf64-x86-64
prog2
architecture: i386:x86-64, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x0000000000400400

Program Header:
    PHDR off    0x0000000000000040 vaddr 0x0000000000400040 paddr 0x0000000000400040 align 2**3
         filesz 0x00000000000001f8 memsz 0x00000000000001f8 flags r-x
  INTERP off    0x0000000000000238 vaddr 0x0000000000400238 paddr 0x0000000000400238 align 2**0
         filesz 0x000000000000001c memsz 0x000000000000001c flags r--
    LOAD off    0x0000000000000000 vaddr 0x0000000000400000 paddr 0x0000000000400000 align 2**21
         filesz 0x000000000000074c memsz 0x000000000000074c flags r-x
    LOAD off    0x0000000000000e08 vaddr 0x0000000000600e08 paddr 0x0000000000600e08 align 2**21
         filesz 0x0000000000000228 memsz 0x0000000000000280 flags rw-
 DYNAMIC off    0x0000000000000e20 vaddr 0x0000000000600e20 paddr 0x0000000000600e20 align 2**3
         filesz 0x00000000000001d0 memsz 0x00000000000001d0 flags rw-
    NOTE off    0x0000000000000254 vaddr 0x0000000000400254 paddr 0x0000000000400254 align 2**2
         filesz 0x0000000000000044 memsz 0x0000000000000044 flags r--
EH_FRAME off    0x0000000000000608 vaddr 0x0000000000400608 paddr 0x0000000000400608 align 2**2
         filesz 0x000000000000003c memsz 0x000000000000003c flags r--
   STACK off    0x0000000000000000 vaddr 0x0000000000000000 paddr 0x0000000000000000 align 2**4
         filesz 0x0000000000000000 memsz 0x0000000000000000 flags rw-
   RELRO off    0x0000000000000e08 vaddr 0x0000000000600e08 paddr 0x0000000000600e08 align 2**0
         filesz 0x00000000000001f8 memsz 0x00000000000001f8 flags r--

Dynamic Section:
  NEEDED               libc.so.6
  INIT                 0x00000000004003c8
  FINI                 0x00000000004005f4
  INIT_ARRAY           0x0000000000600e08
  INIT_ARRAYSZ         0x0000000000000008
  FINI_ARRAY           0x0000000000600e10
  FINI_ARRAYSZ         0x0000000000000008
  GNU_HASH             0x0000000000400298
  STRTAB               0x0000000000400318
  SYMTAB               0x00000000004002b8
  STRSZ                0x000000000000003d
  SYMENT               0x0000000000000018
  DEBUG                0x0000000000000000
  PLTGOT               0x0000000000601000
  PLTRELSZ             0x0000000000000018
  PLTREL               0x0000000000000007
  JMPREL               0x00000000004003b0
  RELA                 0x0000000000400380
  RELASZ               0x0000000000000030
  RELAENT              0x0000000000000018
  VERNEED              0x0000000000400360
  VERNEEDNUM           0x0000000000000001
  VERSYM               0x0000000000400356

Version References:
  required from libc.so.6:
    0x09691a75 0x00 02 GLIBC_2.2.5

Sections:
Idx Name          Size      VMA               LMA               File off  Algn
  0 .interp       0000001c  0000000000400238  0000000000400238  00000238  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .note.ABI-tag 00000020  0000000000400254  0000000000400254  00000254  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .note.gnu.build-id 00000024  0000000000400274  0000000000400274  00000274  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .gnu.hash     0000001c  0000000000400298  0000000000400298  00000298  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .dynsym       00000060  00000000004002b8  00000000004002b8  000002b8  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .dynstr       0000003d  0000000000400318  0000000000400318  00000318  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 .gnu.version  00000008  0000000000400356  0000000000400356  00000356  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .gnu.version_r 00000020  0000000000400360  0000000000400360  00000360  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .rela.dyn     00000030  0000000000400380  0000000000400380  00000380  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  9 .rela.plt     00000018  00000000004003b0  00000000004003b0  000003b0  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 10 .init         00000017  00000000004003c8  00000000004003c8  000003c8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 11 .plt          00000020  00000000004003e0  00000000004003e0  000003e0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 12 .text         000001f2  0000000000400400  0000000000400400  00000400  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 13 .fini         00000009  00000000004005f4  00000000004005f4  000005f4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 14 .rodata       00000008  0000000000400600  0000000000400600  00000600  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 15 .eh_frame_hdr 0000003c  0000000000400608  0000000000400608  00000608  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 16 .eh_frame     00000104  0000000000400648  0000000000400648  00000648  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 17 .init_array   00000008  0000000000600e08  0000000000600e08  00000e08  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 18 .fini_array   00000008  0000000000600e10  0000000000600e10  00000e10  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 19 .jcr          00000008  0000000000600e18  0000000000600e18  00000e18  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 20 .dynamic      000001d0  0000000000600e20  0000000000600e20  00000e20  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 21 .got          00000010  0000000000600ff0  0000000000600ff0  00000ff0  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 22 .got.plt      00000020  0000000000601000  0000000000601000  00001000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 23 .data         00000010  0000000000601020  0000000000601020  00001020  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 24 .bss          00000048  0000000000601040  0000000000601040  00001030  2**5
                  ALLOC
 25 .comment      0000001a  0000000000000000  0000000000000000  00001030  2**0
                  CONTENTS, READONLY
 26 .debug_aranges 00000030  0000000000000000  0000000000000000  0000104a  2**0
                  CONTENTS, READONLY, DEBUGGING
 27 .debug_info   0000041d  0000000000000000  0000000000000000  0000107a  2**0
                  CONTENTS, READONLY, DEBUGGING
 28 .debug_abbrev 00000180  0000000000000000  0000000000000000  00001497  2**0
                  CONTENTS, READONLY, DEBUGGING
 29 .debug_line   000000f4  0000000000000000  0000000000000000  00001617  2**0
                  CONTENTS, READONLY, DEBUGGING
 30 .debug_str    000002bb  0000000000000000  0000000000000000  0000170b  2**0
                  CONTENTS, READONLY, DEBUGGING
 31 .debug_loc    00000070  0000000000000000  0000000000000000  000019c6  2**0
                  CONTENTS, READONLY, DEBUGGING
SYMBOL TABLE:
0000000000400238 l    d  .interp	0000000000000000              .interp
0000000000400254 l    d  .note.ABI-tag	0000000000000000              .note.ABI-tag
0000000000400274 l    d  .note.gnu.build-id	0000000000000000              .note.gnu.build-id
0000000000400298 l    d  .gnu.hash	0000000000000000              .gnu.hash
00000000004002b8 l    d  .dynsym	0000000000000000              .dynsym
0000000000400318 l    d  .dynstr	0000000000000000              .dynstr
0000000000400356 l    d  .gnu.version	0000000000000000              .gnu.version
0000000000400360 l    d  .gnu.version_r	0000000000000000              .gnu.version_r
0000000000400380 l    d  .rela.dyn	0000000000000000              .rela.dyn
00000000004003b0 l    d  .rela.plt	0000000000000000              .rela.plt
00000000004003c8 l    d  .init	0000000000000000              .init
00000000004003e0 l    d  .plt	0000000000000000              .plt
0000000000400400 l    d  .text	0000000000000000              .text
00000000004005f4 l    d  .fini	0000000000000000              .fini
0000000000400600 l    d  .rodata	0000000000000000              .rodata
0000000000400608 l    d  .eh_frame_hdr	0000000000000000              .eh_frame_hdr
0000000000400648 l    d  .eh_frame	0000000000000000              .eh_frame
0000000000600e08 l    d  .init_array	0000000000000000              .init_array
0000000000600e10 l    d  .fini_array	0000000000000000              .fini_array
0000000000600e18 l    d  .jcr	0000000000000000              .jcr
0000000000600e20 l    d  .dynamic	0000000000000000              .dynamic
0000000000600ff0 l    d  .got	0000000000000000              .got
0000000000601000 l    d  .got.plt	0000000000000000              .got.plt
0000000000601020 l    d  .data	0000000000000000              .data
0000000000601040 l    d  .bss	0000000000000000              .bss
0000000000000000 l    d  .comment	0000000000000000              .comment
0000000000000000 l    d  .debug_aranges	0000000000000000              .debug_aranges
0000000000000000 l    d  .debug_info	0000000000000000              .debug_info
0000000000000000 l    d  .debug_abbrev	0000000000000000              .debug_abbrev
0000000000000000 l    d  .debug_line	0000000000000000              .debug_line
0000000000000000 l    d  .debug_str	0000000000000000              .debug_str
0000000000000000 l    d  .debug_loc	0000000000000000              .debug_loc
0000000000000000 l    df *ABS*	0000000000000000              init.c
0000000000000000 l    df *ABS*	0000000000000000              crtstuff.c
0000000000600e18 l     O .jcr	0000000000000000              __JCR_LIST__
0000000000400430 l     F .text	0000000000000000              deregister_tm_clones
0000000000400470 l     F .text	0000000000000000              register_tm_clones
00000000004004b0 l     F .text	0000000000000000              __do_global_dtors_aux
0000000000601040 l     O .bss	0000000000000001              completed.6960
0000000000600e10 l     O .fini_array	0000000000000000              __do_global_dtors_aux_fini_array_entry
00000000004004d0 l     F .text	0000000000000000              frame_dummy
0000000000600e08 l     O .init_array	0000000000000000              __frame_dummy_init_array_entry
0000000000000000 l    df *ABS*	0000000000000000              askl1z1.c
0000000000601060 l     O .bss	0000000000000021              b.2979
0000000000000000 l    df *ABS*	0000000000000000              crtstuff.c
0000000000400748 l     O .eh_frame	0000000000000000              __FRAME_END__
0000000000600e18 l     O .jcr	0000000000000000              __JCR_END__
0000000000000000 l    df *ABS*	0000000000000000              
0000000000600e10 l       .init_array	0000000000000000              __init_array_end
0000000000600e20 l     O .dynamic	0000000000000000              _DYNAMIC
0000000000600e08 l       .init_array	0000000000000000              __init_array_start
0000000000400608 l       .eh_frame_hdr	0000000000000000              __GNU_EH_FRAME_HDR
0000000000601000 l     O .got.plt	0000000000000000              _GLOBAL_OFFSET_TABLE_
00000000004005f0 g     F .text	0000000000000002              __libc_csu_fini
0000000000601020  w      .data	0000000000000000              data_start
0000000000000000       F *UND*	0000000000000000              puts@@GLIBC_2.2.5
00000000004004f6 g     F .text	0000000000000052              byte_to_binary
0000000000601030 g       .data	0000000000000000              _edata
00000000004005f4 g     F .fini	0000000000000000              _fini
0000000000000000       F *UND*	0000000000000000              __libc_start_main@@GLIBC_2.2.5
0000000000601020 g       .data	0000000000000000              __data_start
0000000000000000  w      *UND*	0000000000000000              __gmon_start__
0000000000601028 g     O .data	0000000000000000              .hidden __dso_handle
0000000000400600 g     O .rodata	0000000000000004              _IO_stdin_used
0000000000400580 g     F .text	0000000000000065              __libc_csu_init
0000000000601088 g       .bss	0000000000000000              _end
0000000000400400 g     F .text	000000000000002b              _start
0000000000601030 g       .bss	0000000000000000              __bss_start
0000000000400548 g     F .text	0000000000000032              main
0000000000601030 g     O .data	0000000000000000              .hidden __TMC_END__
00000000004003c8 g     F .init	0000000000000000              _init



prog2:     file format elf64-x86-64
prog2
architecture: i386:x86-64, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x0000000000400400

Program Header:
    PHDR off    0x0000000000000040 vaddr 0x0000000000400040 paddr 0x0000000000400040 align 2**3
         filesz 0x00000000000001f8 memsz 0x00000000000001f8 flags r-x
  INTERP off    0x0000000000000238 vaddr 0x0000000000400238 paddr 0x0000000000400238 align 2**0
         filesz 0x000000000000001c memsz 0x000000000000001c flags r--
    LOAD off    0x0000000000000000 vaddr 0x0000000000400000 paddr 0x0000000000400000 align 2**21
         filesz 0x000000000000074c memsz 0x000000000000074c flags r-x
    LOAD off    0x0000000000000e08 vaddr 0x0000000000600e08 paddr 0x0000000000600e08 align 2**21
         filesz 0x0000000000000228 memsz 0x0000000000000280 flags rw-
 DYNAMIC off    0x0000000000000e20 vaddr 0x0000000000600e20 paddr 0x0000000000600e20 align 2**3
         filesz 0x00000000000001d0 memsz 0x00000000000001d0 flags rw-
    NOTE off    0x0000000000000254 vaddr 0x0000000000400254 paddr 0x0000000000400254 align 2**2
         filesz 0x0000000000000044 memsz 0x0000000000000044 flags r--
EH_FRAME off    0x0000000000000608 vaddr 0x0000000000400608 paddr 0x0000000000400608 align 2**2
         filesz 0x000000000000003c memsz 0x000000000000003c flags r--
   STACK off    0x0000000000000000 vaddr 0x0000000000000000 paddr 0x0000000000000000 align 2**4
         filesz 0x0000000000000000 memsz 0x0000000000000000 flags rw-
   RELRO off    0x0000000000000e08 vaddr 0x0000000000600e08 paddr 0x0000000000600e08 align 2**0
         filesz 0x00000000000001f8 memsz 0x00000000000001f8 flags r--

Dynamic Section:
  NEEDED               libc.so.6
  INIT                 0x00000000004003c8
  FINI                 0x00000000004005f4
  INIT_ARRAY           0x0000000000600e08
  INIT_ARRAYSZ         0x0000000000000008
  FINI_ARRAY           0x0000000000600e10
  FINI_ARRAYSZ         0x0000000000000008
  GNU_HASH             0x0000000000400298
  STRTAB               0x0000000000400318
  SYMTAB               0x00000000004002b8
  STRSZ                0x000000000000003d
  SYMENT               0x0000000000000018
  DEBUG                0x0000000000000000
  PLTGOT               0x0000000000601000
  PLTRELSZ             0x0000000000000018
  PLTREL               0x0000000000000007
  JMPREL               0x00000000004003b0
  RELA                 0x0000000000400380
  RELASZ               0x0000000000000030
  RELAENT              0x0000000000000018
  VERNEED              0x0000000000400360
  VERNEEDNUM           0x0000000000000001
  VERSYM               0x0000000000400356

Version References:
  required from libc.so.6:
    0x09691a75 0x00 02 GLIBC_2.2.5

Sections:
Idx Name          Size      VMA               LMA               File off  Algn
  0 .interp       0000001c  0000000000400238  0000000000400238  00000238  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .note.ABI-tag 00000020  0000000000400254  0000000000400254  00000254  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .note.gnu.build-id 00000024  0000000000400274  0000000000400274  00000274  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .gnu.hash     0000001c  0000000000400298  0000000000400298  00000298  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .dynsym       00000060  00000000004002b8  00000000004002b8  000002b8  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .dynstr       0000003d  0000000000400318  0000000000400318  00000318  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 .gnu.version  00000008  0000000000400356  0000000000400356  00000356  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .gnu.version_r 00000020  0000000000400360  0000000000400360  00000360  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .rela.dyn     00000030  0000000000400380  0000000000400380  00000380  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  9 .rela.plt     00000018  00000000004003b0  00000000004003b0  000003b0  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 10 .init         00000017  00000000004003c8  00000000004003c8  000003c8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 11 .plt          00000020  00000000004003e0  00000000004003e0  000003e0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 12 .text         000001f2  0000000000400400  0000000000400400  00000400  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 13 .fini         00000009  00000000004005f4  00000000004005f4  000005f4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 14 .rodata       00000008  0000000000400600  0000000000400600  00000600  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 15 .eh_frame_hdr 0000003c  0000000000400608  0000000000400608  00000608  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 16 .eh_frame     00000104  0000000000400648  0000000000400648  00000648  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 17 .init_array   00000008  0000000000600e08  0000000000600e08  00000e08  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 18 .fini_array   00000008  0000000000600e10  0000000000600e10  00000e10  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 19 .jcr          00000008  0000000000600e18  0000000000600e18  00000e18  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 20 .dynamic      000001d0  0000000000600e20  0000000000600e20  00000e20  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 21 .got          00000010  0000000000600ff0  0000000000600ff0  00000ff0  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 22 .got.plt      00000020  0000000000601000  0000000000601000  00001000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 23 .data         00000010  0000000000601020  0000000000601020  00001020  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 24 .bss          00000048  0000000000601040  0000000000601040  00001030  2**5
                  ALLOC
 25 .comment      0000001a  0000000000000000  0000000000000000  00001030  2**0
                  CONTENTS, READONLY
 26 .debug_aranges 00000030  0000000000000000  0000000000000000  0000104a  2**0
                  CONTENTS, READONLY, DEBUGGING
 27 .debug_info   0000041d  0000000000000000  0000000000000000  0000107a  2**0
                  CONTENTS, READONLY, DEBUGGING
 28 .debug_abbrev 00000180  0000000000000000  0000000000000000  00001497  2**0
                  CONTENTS, READONLY, DEBUGGING
 29 .debug_line   000000f4  0000000000000000  0000000000000000  00001617  2**0
                  CONTENTS, READONLY, DEBUGGING
 30 .debug_str    000002bb  0000000000000000  0000000000000000  0000170b  2**0
                  CONTENTS, READONLY, DEBUGGING
 31 .debug_loc    00000070  0000000000000000  0000000000000000  000019c6  2**0
                  CONTENTS, READONLY, DEBUGGING
SYMBOL TABLE:
0000000000400238 l    d  .interp	0000000000000000              .interp
0000000000400254 l    d  .note.ABI-tag	0000000000000000              .note.ABI-tag
0000000000400274 l    d  .note.gnu.build-id	0000000000000000              .note.gnu.build-id
0000000000400298 l    d  .gnu.hash	0000000000000000              .gnu.hash
00000000004002b8 l    d  .dynsym	0000000000000000              .dynsym
0000000000400318 l    d  .dynstr	0000000000000000              .dynstr
0000000000400356 l    d  .gnu.version	0000000000000000              .gnu.version
0000000000400360 l    d  .gnu.version_r	0000000000000000              .gnu.version_r
0000000000400380 l    d  .rela.dyn	0000000000000000              .rela.dyn
00000000004003b0 l    d  .rela.plt	0000000000000000              .rela.plt
00000000004003c8 l    d  .init	0000000000000000              .init
00000000004003e0 l    d  .plt	0000000000000000              .plt
0000000000400400 l    d  .text	0000000000000000              .text
00000000004005f4 l    d  .fini	0000000000000000              .fini
0000000000400600 l    d  .rodata	0000000000000000              .rodata
0000000000400608 l    d  .eh_frame_hdr	0000000000000000              .eh_frame_hdr
0000000000400648 l    d  .eh_frame	0000000000000000              .eh_frame
0000000000600e08 l    d  .init_array	0000000000000000              .init_array
0000000000600e10 l    d  .fini_array	0000000000000000              .fini_array
0000000000600e18 l    d  .jcr	0000000000000000              .jcr
0000000000600e20 l    d  .dynamic	0000000000000000              .dynamic
0000000000600ff0 l    d  .got	0000000000000000              .got
0000000000601000 l    d  .got.plt	0000000000000000              .got.plt
0000000000601020 l    d  .data	0000000000000000              .data
0000000000601040 l    d  .bss	0000000000000000              .bss
0000000000000000 l    d  .comment	0000000000000000              .comment
0000000000000000 l    d  .debug_aranges	0000000000000000              .debug_aranges
0000000000000000 l    d  .debug_info	0000000000000000              .debug_info
0000000000000000 l    d  .debug_abbrev	0000000000000000              .debug_abbrev
0000000000000000 l    d  .debug_line	0000000000000000              .debug_line
0000000000000000 l    d  .debug_str	0000000000000000              .debug_str
0000000000000000 l    d  .debug_loc	0000000000000000              .debug_loc
0000000000000000 l    df *ABS*	0000000000000000              init.c
0000000000000000 l    df *ABS*	0000000000000000              crtstuff.c
0000000000600e18 l     O .jcr	0000000000000000              __JCR_LIST__
0000000000400430 l     F .text	0000000000000000              deregister_tm_clones
0000000000400470 l     F .text	0000000000000000              register_tm_clones
00000000004004b0 l     F .text	0000000000000000              __do_global_dtors_aux
0000000000601040 l     O .bss	0000000000000001              completed.6960
0000000000600e10 l     O .fini_array	0000000000000000              __do_global_dtors_aux_fini_array_entry
00000000004004d0 l     F .text	0000000000000000              frame_dummy
0000000000600e08 l     O .init_array	0000000000000000              __frame_dummy_init_array_entry
0000000000000000 l    df *ABS*	0000000000000000              askl1z1.c
0000000000601060 l     O .bss	0000000000000021              b.2979
0000000000000000 l    df *ABS*	0000000000000000              crtstuff.c
0000000000400748 l     O .eh_frame	0000000000000000              __FRAME_END__
0000000000600e18 l     O .jcr	0000000000000000              __JCR_END__
0000000000000000 l    df *ABS*	0000000000000000              
0000000000600e10 l       .init_array	0000000000000000              __init_array_end
0000000000600e20 l     O .dynamic	0000000000000000              _DYNAMIC
0000000000600e08 l       .init_array	0000000000000000              __init_array_start
0000000000400608 l       .eh_frame_hdr	0000000000000000              __GNU_EH_FRAME_HDR
0000000000601000 l     O .got.plt	0000000000000000              _GLOBAL_OFFSET_TABLE_
00000000004005f0 g     F .text	0000000000000002              __libc_csu_fini
0000000000601020  w      .data	0000000000000000              data_start
0000000000000000       F *UND*	0000000000000000              puts@@GLIBC_2.2.5
00000000004004f6 g     F .text	0000000000000052              byte_to_binary
0000000000601030 g       .data	0000000000000000              _edata
00000000004005f4 g     F .fini	0000000000000000              _fini
0000000000000000       F *UND*	0000000000000000              __libc_start_main@@GLIBC_2.2.5
0000000000601020 g       .data	0000000000000000              __data_start
0000000000000000  w      *UND*	0000000000000000              __gmon_start__
0000000000601028 g     O .data	0000000000000000              .hidden __dso_handle
0000000000400600 g     O .rodata	0000000000000004              _IO_stdin_used
0000000000400580 g     F .text	0000000000000065              __libc_csu_init
0000000000601088 g       .bss	0000000000000000              _end
0000000000400400 g     F .text	000000000000002b              _start
0000000000601030 g       .bss	0000000000000000              __bss_start
0000000000400548 g     F .text	0000000000000032              main
0000000000601030 g     O .data	0000000000000000              .hidden __TMC_END__
00000000004003c8 g     F .init	0000000000000000              _init



Disassembly of section .init:

00000000004003c8 <_init>:
  4003c8:	48 83 ec 08          	sub    $0x8,%rsp
  4003cc:	48 8b 05 25 0c 20 00 	mov    0x200c25(%rip),%rax        # 600ff8 <__gmon_start__>
  4003d3:	48 85 c0             	test   %rax,%rax
  4003d6:	74 02                	je     4003da <_init+0x12>
  4003d8:	ff d0                	callq  *%rax
  4003da:	48 83 c4 08          	add    $0x8,%rsp
  4003de:	c3                   	retq   

Disassembly of section .plt:

00000000004003e0 <.plt>:
  4003e0:	ff 35 22 0c 20 00    	pushq  0x200c22(%rip)        # 601008 <_GLOBAL_OFFSET_TABLE_+0x8>
  4003e6:	ff 25 24 0c 20 00    	jmpq   *0x200c24(%rip)        # 601010 <_GLOBAL_OFFSET_TABLE_+0x10>
  4003ec:	0f 1f 40 00          	nopl   0x0(%rax)

00000000004003f0 <puts@plt>:
  4003f0:	ff 25 22 0c 20 00    	jmpq   *0x200c22(%rip)        # 601018 <puts@GLIBC_2.2.5>
  4003f6:	68 00 00 00 00       	pushq  $0x0
  4003fb:	e9 e0 ff ff ff       	jmpq   4003e0 <.plt>

Disassembly of section .text:

0000000000400400 <_start>:
  400400:	31 ed                	xor    %ebp,%ebp
  400402:	49 89 d1             	mov    %rdx,%r9
  400405:	5e                   	pop    %rsi
  400406:	48 89 e2             	mov    %rsp,%rdx
  400409:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
  40040d:	50                   	push   %rax
  40040e:	54                   	push   %rsp
  40040f:	49 c7 c0 f0 05 40 00 	mov    $0x4005f0,%r8
  400416:	48 c7 c1 80 05 40 00 	mov    $0x400580,%rcx
  40041d:	48 c7 c7 48 05 40 00 	mov    $0x400548,%rdi
  400424:	ff 15 c6 0b 20 00    	callq  *0x200bc6(%rip)        # 600ff0 <__libc_start_main@GLIBC_2.2.5>
  40042a:	f4                   	hlt    
  40042b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000400430 <deregister_tm_clones>:
  400430:	b8 37 10 60 00       	mov    $0x601037,%eax
  400435:	55                   	push   %rbp
  400436:	48 2d 30 10 60 00    	sub    $0x601030,%rax
  40043c:	48 83 f8 0e          	cmp    $0xe,%rax
  400440:	48 89 e5             	mov    %rsp,%rbp
  400443:	76 1b                	jbe    400460 <deregister_tm_clones+0x30>
  400445:	b8 00 00 00 00       	mov    $0x0,%eax
  40044a:	48 85 c0             	test   %rax,%rax
  40044d:	74 11                	je     400460 <deregister_tm_clones+0x30>
  40044f:	5d                   	pop    %rbp
  400450:	bf 30 10 60 00       	mov    $0x601030,%edi
  400455:	ff e0                	jmpq   *%rax
  400457:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  40045e:	00 00 
  400460:	5d                   	pop    %rbp
  400461:	c3                   	retq   
  400462:	0f 1f 40 00          	nopl   0x0(%rax)
  400466:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40046d:	00 00 00 

0000000000400470 <register_tm_clones>:
  400470:	be 30 10 60 00       	mov    $0x601030,%esi
  400475:	55                   	push   %rbp
  400476:	48 81 ee 30 10 60 00 	sub    $0x601030,%rsi
  40047d:	48 c1 fe 03          	sar    $0x3,%rsi
  400481:	48 89 e5             	mov    %rsp,%rbp
  400484:	48 89 f0             	mov    %rsi,%rax
  400487:	48 c1 e8 3f          	shr    $0x3f,%rax
  40048b:	48 01 c6             	add    %rax,%rsi
  40048e:	48 d1 fe             	sar    %rsi
  400491:	74 15                	je     4004a8 <register_tm_clones+0x38>
  400493:	b8 00 00 00 00       	mov    $0x0,%eax
  400498:	48 85 c0             	test   %rax,%rax
  40049b:	74 0b                	je     4004a8 <register_tm_clones+0x38>
  40049d:	5d                   	pop    %rbp
  40049e:	bf 30 10 60 00       	mov    $0x601030,%edi
  4004a3:	ff e0                	jmpq   *%rax
  4004a5:	0f 1f 00             	nopl   (%rax)
  4004a8:	5d                   	pop    %rbp
  4004a9:	c3                   	retq   
  4004aa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000004004b0 <__do_global_dtors_aux>:
  4004b0:	80 3d 89 0b 20 00 00 	cmpb   $0x0,0x200b89(%rip)        # 601040 <completed.6960>
  4004b7:	75 11                	jne    4004ca <__do_global_dtors_aux+0x1a>
  4004b9:	55                   	push   %rbp
  4004ba:	48 89 e5             	mov    %rsp,%rbp
  4004bd:	e8 6e ff ff ff       	callq  400430 <deregister_tm_clones>
  4004c2:	5d                   	pop    %rbp
  4004c3:	c6 05 76 0b 20 00 01 	movb   $0x1,0x200b76(%rip)        # 601040 <completed.6960>
  4004ca:	f3 c3                	repz retq 
  4004cc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000004004d0 <frame_dummy>:
  4004d0:	bf 18 0e 60 00       	mov    $0x600e18,%edi
  4004d5:	48 83 3f 00          	cmpq   $0x0,(%rdi)
  4004d9:	75 05                	jne    4004e0 <frame_dummy+0x10>
  4004db:	eb 93                	jmp    400470 <register_tm_clones>
  4004dd:	0f 1f 00             	nopl   (%rax)
  4004e0:	b8 00 00 00 00       	mov    $0x0,%eax
  4004e5:	48 85 c0             	test   %rax,%rax
  4004e8:	74 f1                	je     4004db <frame_dummy+0xb>
  4004ea:	55                   	push   %rbp
  4004eb:	48 89 e5             	mov    %rsp,%rbp
  4004ee:	ff d0                	callq  *%rax
  4004f0:	5d                   	pop    %rbp
  4004f1:	e9 7a ff ff ff       	jmpq   400470 <register_tm_clones>

00000000004004f6 <byte_to_binary>:
  4004f6:	41 89 f8             	mov    %edi,%r8d
  4004f9:	c6 05 60 0b 20 00 00 	movb   $0x0,0x200b60(%rip)        # 601060 <b.2979>
  400500:	ba 00 00 00 80       	mov    $0x80000000,%edx
  400505:	eb 27                	jmp    40052e <byte_to_binary+0x38>
  400507:	be 04 06 40 00       	mov    $0x400604,%esi
  40050c:	bf 60 10 60 00       	mov    $0x601060,%edi
  400511:	b8 00 00 00 00       	mov    $0x0,%eax
  400516:	48 c7 c1 ff ff ff ff 	mov    $0xffffffffffffffff,%rcx
  40051d:	f2 ae                	repnz scas %es:(%rdi),%al
  40051f:	48 f7 d1             	not    %rcx
  400522:	0f b7 06             	movzwl (%rsi),%eax
  400525:	66 89 81 5f 10 60 00 	mov    %ax,0x60105f(%rcx)
  40052c:	d1 ea                	shr    %edx
  40052e:	85 d2                	test   %edx,%edx
  400530:	74 10                	je     400542 <byte_to_binary+0x4c>
  400532:	44 89 c0             	mov    %r8d,%eax
  400535:	21 d0                	and    %edx,%eax
  400537:	39 c2                	cmp    %eax,%edx
  400539:	74 cc                	je     400507 <byte_to_binary+0x11>
  40053b:	be 06 06 40 00       	mov    $0x400606,%esi
  400540:	eb ca                	jmp    40050c <byte_to_binary+0x16>
  400542:	b8 60 10 60 00       	mov    $0x601060,%eax
  400547:	c3                   	retq   

0000000000400548 <main>:
  400548:	48 83 ec 08          	sub    $0x8,%rsp
  40054c:	bf 18 50 94 49       	mov    $0x49945018,%edi
  400551:	e8 a0 ff ff ff       	callq  4004f6 <byte_to_binary>
  400556:	48 89 c7             	mov    %rax,%rdi
  400559:	e8 92 fe ff ff       	callq  4003f0 <puts@plt>
  40055e:	bf 18 50 94 49       	mov    $0x49945018,%edi
  400563:	e8 8e ff ff ff       	callq  4004f6 <byte_to_binary>
  400568:	48 89 c7             	mov    %rax,%rdi
  40056b:	e8 80 fe ff ff       	callq  4003f0 <puts@plt>
  400570:	b8 00 00 00 00       	mov    $0x0,%eax
  400575:	48 83 c4 08          	add    $0x8,%rsp
  400579:	c3                   	retq   
  40057a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000400580 <__libc_csu_init>:
  400580:	41 57                	push   %r15
  400582:	41 56                	push   %r14
  400584:	41 89 ff             	mov    %edi,%r15d
  400587:	41 55                	push   %r13
  400589:	41 54                	push   %r12
  40058b:	4c 8d 25 76 08 20 00 	lea    0x200876(%rip),%r12        # 600e08 <__frame_dummy_init_array_entry>
  400592:	55                   	push   %rbp
  400593:	48 8d 2d 76 08 20 00 	lea    0x200876(%rip),%rbp        # 600e10 <__init_array_end>
  40059a:	53                   	push   %rbx
  40059b:	49 89 f6             	mov    %rsi,%r14
  40059e:	49 89 d5             	mov    %rdx,%r13
  4005a1:	4c 29 e5             	sub    %r12,%rbp
  4005a4:	48 83 ec 08          	sub    $0x8,%rsp
  4005a8:	48 c1 fd 03          	sar    $0x3,%rbp
  4005ac:	e8 17 fe ff ff       	callq  4003c8 <_init>
  4005b1:	48 85 ed             	test   %rbp,%rbp
  4005b4:	74 20                	je     4005d6 <__libc_csu_init+0x56>
  4005b6:	31 db                	xor    %ebx,%ebx
  4005b8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  4005bf:	00 
  4005c0:	4c 89 ea             	mov    %r13,%rdx
  4005c3:	4c 89 f6             	mov    %r14,%rsi
  4005c6:	44 89 ff             	mov    %r15d,%edi
  4005c9:	41 ff 14 dc          	callq  *(%r12,%rbx,8)
  4005cd:	48 83 c3 01          	add    $0x1,%rbx
  4005d1:	48 39 dd             	cmp    %rbx,%rbp
  4005d4:	75 ea                	jne    4005c0 <__libc_csu_init+0x40>
  4005d6:	48 83 c4 08          	add    $0x8,%rsp
  4005da:	5b                   	pop    %rbx
  4005db:	5d                   	pop    %rbp
  4005dc:	41 5c                	pop    %r12
  4005de:	41 5d                	pop    %r13
  4005e0:	41 5e                	pop    %r14
  4005e2:	41 5f                	pop    %r15
  4005e4:	c3                   	retq   
  4005e5:	90                   	nop
  4005e6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  4005ed:	00 00 00 

00000000004005f0 <__libc_csu_fini>:
  4005f0:	f3 c3                	repz retq 

Disassembly of section .fini:

00000000004005f4 <_fini>:
  4005f4:	48 83 ec 08          	sub    $0x8,%rsp
  4005f8:	48 83 c4 08          	add    $0x8,%rsp
  4005fc:	c3                   	retq   

prog2:     file format elf64-x86-64


Disassembly of section .init:

00000000004003c8 <_init>:
  4003c8:	48 83 ec 08          	sub    $0x8,%rsp
  4003cc:	48 8b 05 25 0c 20 00 	mov    0x200c25(%rip),%rax        # 600ff8 <__gmon_start__>
  4003d3:	48 85 c0             	test   %rax,%rax
  4003d6:	74 02                	je     4003da <_init+0x12>
  4003d8:	ff d0                	callq  *%rax
  4003da:	48 83 c4 08          	add    $0x8,%rsp
  4003de:	c3                   	retq   

Disassembly of section .plt:

00000000004003e0 <.plt>:
  4003e0:	ff 35 22 0c 20 00    	pushq  0x200c22(%rip)        # 601008 <_GLOBAL_OFFSET_TABLE_+0x8>
  4003e6:	ff 25 24 0c 20 00    	jmpq   *0x200c24(%rip)        # 601010 <_GLOBAL_OFFSET_TABLE_+0x10>
  4003ec:	0f 1f 40 00          	nopl   0x0(%rax)

00000000004003f0 <puts@plt>:
  4003f0:	ff 25 22 0c 20 00    	jmpq   *0x200c22(%rip)        # 601018 <puts@GLIBC_2.2.5>
  4003f6:	68 00 00 00 00       	pushq  $0x0
  4003fb:	e9 e0 ff ff ff       	jmpq   4003e0 <.plt>

Disassembly of section .text:

0000000000400400 <_start>:
  400400:	31 ed                	xor    %ebp,%ebp
  400402:	49 89 d1             	mov    %rdx,%r9
  400405:	5e                   	pop    %rsi
  400406:	48 89 e2             	mov    %rsp,%rdx
  400409:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
  40040d:	50                   	push   %rax
  40040e:	54                   	push   %rsp
  40040f:	49 c7 c0 f0 05 40 00 	mov    $0x4005f0,%r8
  400416:	48 c7 c1 80 05 40 00 	mov    $0x400580,%rcx
  40041d:	48 c7 c7 48 05 40 00 	mov    $0x400548,%rdi
  400424:	ff 15 c6 0b 20 00    	callq  *0x200bc6(%rip)        # 600ff0 <__libc_start_main@GLIBC_2.2.5>
  40042a:	f4                   	hlt    
  40042b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000400430 <deregister_tm_clones>:
  400430:	b8 37 10 60 00       	mov    $0x601037,%eax
  400435:	55                   	push   %rbp
  400436:	48 2d 30 10 60 00    	sub    $0x601030,%rax
  40043c:	48 83 f8 0e          	cmp    $0xe,%rax
  400440:	48 89 e5             	mov    %rsp,%rbp
  400443:	76 1b                	jbe    400460 <deregister_tm_clones+0x30>
  400445:	b8 00 00 00 00       	mov    $0x0,%eax
  40044a:	48 85 c0             	test   %rax,%rax
  40044d:	74 11                	je     400460 <deregister_tm_clones+0x30>
  40044f:	5d                   	pop    %rbp
  400450:	bf 30 10 60 00       	mov    $0x601030,%edi
  400455:	ff e0                	jmpq   *%rax
  400457:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  40045e:	00 00 
  400460:	5d                   	pop    %rbp
  400461:	c3                   	retq   
  400462:	0f 1f 40 00          	nopl   0x0(%rax)
  400466:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40046d:	00 00 00 

0000000000400470 <register_tm_clones>:
  400470:	be 30 10 60 00       	mov    $0x601030,%esi
  400475:	55                   	push   %rbp
  400476:	48 81 ee 30 10 60 00 	sub    $0x601030,%rsi
  40047d:	48 c1 fe 03          	sar    $0x3,%rsi
  400481:	48 89 e5             	mov    %rsp,%rbp
  400484:	48 89 f0             	mov    %rsi,%rax
  400487:	48 c1 e8 3f          	shr    $0x3f,%rax
  40048b:	48 01 c6             	add    %rax,%rsi
  40048e:	48 d1 fe             	sar    %rsi
  400491:	74 15                	je     4004a8 <register_tm_clones+0x38>
  400493:	b8 00 00 00 00       	mov    $0x0,%eax
  400498:	48 85 c0             	test   %rax,%rax
  40049b:	74 0b                	je     4004a8 <register_tm_clones+0x38>
  40049d:	5d                   	pop    %rbp
  40049e:	bf 30 10 60 00       	mov    $0x601030,%edi
  4004a3:	ff e0                	jmpq   *%rax
  4004a5:	0f 1f 00             	nopl   (%rax)
  4004a8:	5d                   	pop    %rbp
  4004a9:	c3                   	retq   
  4004aa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000004004b0 <__do_global_dtors_aux>:
  4004b0:	80 3d 89 0b 20 00 00 	cmpb   $0x0,0x200b89(%rip)        # 601040 <completed.6960>
  4004b7:	75 11                	jne    4004ca <__do_global_dtors_aux+0x1a>
  4004b9:	55                   	push   %rbp
  4004ba:	48 89 e5             	mov    %rsp,%rbp
  4004bd:	e8 6e ff ff ff       	callq  400430 <deregister_tm_clones>
  4004c2:	5d                   	pop    %rbp
  4004c3:	c6 05 76 0b 20 00 01 	movb   $0x1,0x200b76(%rip)        # 601040 <completed.6960>
  4004ca:	f3 c3                	repz retq 
  4004cc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000004004d0 <frame_dummy>:
  4004d0:	bf 18 0e 60 00       	mov    $0x600e18,%edi
  4004d5:	48 83 3f 00          	cmpq   $0x0,(%rdi)
  4004d9:	75 05                	jne    4004e0 <frame_dummy+0x10>
  4004db:	eb 93                	jmp    400470 <register_tm_clones>
  4004dd:	0f 1f 00             	nopl   (%rax)
  4004e0:	b8 00 00 00 00       	mov    $0x0,%eax
  4004e5:	48 85 c0             	test   %rax,%rax
  4004e8:	74 f1                	je     4004db <frame_dummy+0xb>
  4004ea:	55                   	push   %rbp
  4004eb:	48 89 e5             	mov    %rsp,%rbp
  4004ee:	ff d0                	callq  *%rax
  4004f0:	5d                   	pop    %rbp
  4004f1:	e9 7a ff ff ff       	jmpq   400470 <register_tm_clones>

00000000004004f6 <byte_to_binary>:
  4004f6:	41 89 f8             	mov    %edi,%r8d
  4004f9:	c6 05 60 0b 20 00 00 	movb   $0x0,0x200b60(%rip)        # 601060 <b.2979>
  400500:	ba 00 00 00 80       	mov    $0x80000000,%edx
  400505:	eb 27                	jmp    40052e <byte_to_binary+0x38>
  400507:	be 04 06 40 00       	mov    $0x400604,%esi
  40050c:	bf 60 10 60 00       	mov    $0x601060,%edi
  400511:	b8 00 00 00 00       	mov    $0x0,%eax
  400516:	48 c7 c1 ff ff ff ff 	mov    $0xffffffffffffffff,%rcx
  40051d:	f2 ae                	repnz scas %es:(%rdi),%al
  40051f:	48 f7 d1             	not    %rcx
  400522:	0f b7 06             	movzwl (%rsi),%eax
  400525:	66 89 81 5f 10 60 00 	mov    %ax,0x60105f(%rcx)
  40052c:	d1 ea                	shr    %edx
  40052e:	85 d2                	test   %edx,%edx
  400530:	74 10                	je     400542 <byte_to_binary+0x4c>
  400532:	44 89 c0             	mov    %r8d,%eax
  400535:	21 d0                	and    %edx,%eax
  400537:	39 c2                	cmp    %eax,%edx
  400539:	74 cc                	je     400507 <byte_to_binary+0x11>
  40053b:	be 06 06 40 00       	mov    $0x400606,%esi
  400540:	eb ca                	jmp    40050c <byte_to_binary+0x16>
  400542:	b8 60 10 60 00       	mov    $0x601060,%eax
  400547:	c3                   	retq   

0000000000400548 <main>:
  400548:	48 83 ec 08          	sub    $0x8,%rsp
  40054c:	bf 18 50 94 49       	mov    $0x49945018,%edi
  400551:	e8 a0 ff ff ff       	callq  4004f6 <byte_to_binary>
  400556:	48 89 c7             	mov    %rax,%rdi
  400559:	e8 92 fe ff ff       	callq  4003f0 <puts@plt>
  40055e:	bf 18 50 94 49       	mov    $0x49945018,%edi
  400563:	e8 8e ff ff ff       	callq  4004f6 <byte_to_binary>
  400568:	48 89 c7             	mov    %rax,%rdi
  40056b:	e8 80 fe ff ff       	callq  4003f0 <puts@plt>
  400570:	b8 00 00 00 00       	mov    $0x0,%eax
  400575:	48 83 c4 08          	add    $0x8,%rsp
  400579:	c3                   	retq   
  40057a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000400580 <__libc_csu_init>:
  400580:	41 57                	push   %r15
  400582:	41 56                	push   %r14
  400584:	41 89 ff             	mov    %edi,%r15d
  400587:	41 55                	push   %r13
  400589:	41 54                	push   %r12
  40058b:	4c 8d 25 76 08 20 00 	lea    0x200876(%rip),%r12        # 600e08 <__frame_dummy_init_array_entry>
  400592:	55                   	push   %rbp
  400593:	48 8d 2d 76 08 20 00 	lea    0x200876(%rip),%rbp        # 600e10 <__init_array_end>
  40059a:	53                   	push   %rbx
  40059b:	49 89 f6             	mov    %rsi,%r14
  40059e:	49 89 d5             	mov    %rdx,%r13
  4005a1:	4c 29 e5             	sub    %r12,%rbp
  4005a4:	48 83 ec 08          	sub    $0x8,%rsp
  4005a8:	48 c1 fd 03          	sar    $0x3,%rbp
  4005ac:	e8 17 fe ff ff       	callq  4003c8 <_init>
  4005b1:	48 85 ed             	test   %rbp,%rbp
  4005b4:	74 20                	je     4005d6 <__libc_csu_init+0x56>
  4005b6:	31 db                	xor    %ebx,%ebx
  4005b8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  4005bf:	00 
  4005c0:	4c 89 ea             	mov    %r13,%rdx
  4005c3:	4c 89 f6             	mov    %r14,%rsi
  4005c6:	44 89 ff             	mov    %r15d,%edi
  4005c9:	41 ff 14 dc          	callq  *(%r12,%rbx,8)
  4005cd:	48 83 c3 01          	add    $0x1,%rbx
  4005d1:	48 39 dd             	cmp    %rbx,%rbp
  4005d4:	75 ea                	jne    4005c0 <__libc_csu_init+0x40>
  4005d6:	48 83 c4 08          	add    $0x8,%rsp
  4005da:	5b                   	pop    %rbx
  4005db:	5d                   	pop    %rbp
  4005dc:	41 5c                	pop    %r12
  4005de:	41 5d                	pop    %r13
  4005e0:	41 5e                	pop    %r14
  4005e2:	41 5f                	pop    %r15
  4005e4:	c3                   	retq   
  4005e5:	90                   	nop
  4005e6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  4005ed:	00 00 00 

00000000004005f0 <__libc_csu_fini>:
  4005f0:	f3 c3                	repz retq 

Disassembly of section .fini:

00000000004005f4 <_fini>:
  4005f4:	48 83 ec 08          	sub    $0x8,%rsp
  4005f8:	48 83 c4 08          	add    $0x8,%rsp
  4005fc:	c3                   	retq   
